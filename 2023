Jan : I wanted to Give gift to world that no one has given the gift like this from 1000 year back and 1000 year upcomming.
MAR : All good thing from wait
Mar : har 5 minutes ka hisaab maago.
Feb : One human being ko Marn
e ke baad 84 lakh loniyo se gujar na padhata hai.
Feb ; One day I will dye.
Jan : Complete day revision at night, improve IQ , memory, retrieval, ram.
Jan : Meditation Gives everything.
My ritual
Like I am thinking in the past some things is handdle very easy , but strulled hard. like wise think about your when I will. bee
then i have thought I do have to regret for this thing that I haaveake world top 100 people in the world.come old
-) kisi bhi  hij ko uthana hi priority deni hai nahi usse gada nahi usse kaam
If you have to increase the absorption power of any thing recall each,and every movement of day that where your chetna is their at particular movement, what
you are feeling may be it's 1 hour for revision.When revision from top to bottom , stop on that point doo the chintan.
1) night revision details - *(abortion/registration, retation , recallation )Improve IQ, memory, Registration,retation, recalls, help in problem solving. Data revision is
most important (1 to 1.5 hours).
2) Morning last 7(fast/slow) only data revision. - that keep track of week, month , 3 month , year, 5 year ,10 year target.
3) Shambhawi mudra Meditation 21 minutes - help in creating nurous, help in everything.
4) Make Daily routine at night that always be in your back of mind.
4.1) Habits of tracking every 15 minutes,30 minutes.high expectations and faith Like tumko add Diya Gaye to kar logo n all round interview me ,
Like koi product ko million logo ke pass pahuch dogo to duniya ka sabse Amir isaan baan sakte hoo n.
5)During desire and faith for 15 minutes.

6)yoga - for health and active , cure all the disease ,have infinite benefits.
7) Brain me infine information rakh sakte hai(understanding , visualsation , Recalling) but impoetant hai problem solving(Imaze alot more visually to solve
the problem , because you are storing infine data in your brain).
8) personality, Communication,think and grow rich book

///////////////////////////////////////// My Ritual 2021
1> Mind  is most power tool 
1.1> It will  changes your DNA even Like Dhoni , Rohit sharma , Virat, Ronado , Even Bill gates is telling.
15 minutes morning Meditation for Disire , Belive , Sharp Laser Mind.
15 minutes night Meditation    for Disire , Belive , Sharp Laser Mind.
Most Important thing : How You are Managing(Like Rahul Bhai saying) Conduct your self Like (Dhoni saying)
Level 1 (Open for Everthing Like I am Cory , Dhoni , ETC)
Level 2 (Open for Everthing Like I am Cory , Dhoni , ETC)
Level 3 (Open for Everthing Like I am Cory , Dhoni , ETC)
1.2> It will control inter and external thing also
1.3> Tensition lene ko serious nahi bolte. 
2> Rahul Bhai ki sari baat ;
3> 1) night revision details - *(abortion/registration, retation , recallation )Improve IQ, memory, Registration,retation, recalls, help in problem solving. 
Data revision is most important.
4> Always take serious of top ladder  people of your industries Like Rahul Bhai told.
5> Always get inspired by 1> IamCory 2>Dhoni 3>BillGate 4>Think And Grow Rich. 
6>that keep Plane track of week, month , 3 month , year, 5 year ,10 year target.
7>Keep changing My ritual 3Month/Month.(Every year new types ritual or every month same ritual re - writtten).



////////////////////My 2nd ritual 2021

Programmers solve problems by following a systematic approach that involves analyzing the problem, designing a solution, implementing the solution in code, testing it, and iterating until the desired outcome is achieved. Here's a general overview of how programmers typically approach problem-solving:

1. Understanding the Problem: The first step is to gain a clear understanding of the problem at hand. Programmers analyze the requirements, constraints, and any specific inputs or outputs needed.

2. Breaking Down the Problem: Complex problems are often divided into smaller, more manageable subproblems. Breaking down the problem helps programmers tackle it in a more organized manner.

3. Designing the Solution: Programmers design an algorithm or a plan to solve the problem. This involves choosing appropriate data structures, determining the flow of control, and deciding on the steps needed to achieve the desired outcome.

4. Implementing the Solution: Programmers write code based on the designed solution. They choose a programming language and utilize the syntax, libraries, and frameworks to translate their algorithm into executable code.

5. Testing and Debugging: Once the code is written, programmers test it thoroughly. They check if the program produces the expected outputs for different inputs and handle any potential errors or edge cases. Debugging techniques are used to identify and fix any issues in the code.

6. Refining and Optimizing: Programmers often iterate on their solution to make it more efficient, readable, and maintainable. They may refactor the code, improve algorithmic efficiency, or optimize resource usage.

7. Documentation: It is essential to document the solution, including code comments, function descriptions, and overall system documentation. This helps other programmers understand and maintain the code in the future.

8. Continuous Learning: Problem-solving is a continuous learning process. Programmers strive to enhance their skills and knowledge by seeking feedback, learning from mistakes, studying best practices, and keeping up with advancements in the field.

It's important to note that problem-solving approaches can vary depending on the individual programmer, the nature of the problem, and the programming language or domain involved.


/////////////////////////////////////////////////How to behave like programmer
To behave like a programmer, you can adopt certain habits and practices that are commonly observed among programmers. Here are some key aspects of programmer behavior:

1. Logical Thinking: Programmers approach problems with a logical and analytical mindset. They break down complex problems into smaller, manageable parts and think critically to devise solutions.

2. Attention to Detail: Programmers pay close attention to details. They carefully review code, documentation, and requirements to ensure accuracy and completeness.

3. Problem-Solving Attitude: Programmers have a problem-solving attitude. They are persistent, patient, and resourceful when faced with challenges. They enjoy finding creative solutions and are not deterred by setbacks.

4. Continuous Learning: Programmers embrace lifelong learning. They actively seek new knowledge, explore new technologies, and stay updated with the latest trends and best practices in their field.

5. Collaboration and Communication: Programmers understand the value of effective communication and collaboration. They actively participate in discussions, seek feedback from peers, and are open to constructive criticism. They can explain complex technical concepts to non-technical stakeholders in a clear and understandable manner.

6. Attention to Efficiency and Optimization: Programmers strive to write efficient and optimized code. They consider factors like algorithmic complexity, resource utilization, and performance to ensure their solutions are as efficient as possible.

7. Documentation and Code Organization: Programmers maintain well-documented code and follow standard coding practices. They use meaningful variable and function names, write clear comments, and organize their code in a structured and readable manner.

8. Testing and Quality Assurance: Programmers understand the importance of testing and quality assurance. They write unit tests to verify the correctness of their code and conduct thorough testing to identify and fix bugs and errors.

9. Adaptability and Flexibility: Programmers are adaptable and flexible in their approach. They can quickly learn new programming languages, frameworks, and tools as needed for different projects. They also adapt to changing requirements and are open to incorporating feedback and making improvements.

10. Time Management and Prioritization: Programmers effectively manage their time and prioritize tasks. They break down larger projects into smaller milestones, set deadlines, and allocate time appropriately to meet project goals.

Remember that these behaviors are not exclusive to programmers, and anyone can incorporate them into their problem-solving approach and work style, regardless of their profession or technical background.



/////////////////////////////////////////////////////////What is  logical and analytical mindset.
A logical and analytical mindset refers to the ability to think critically, reason systematically, and approach problems in a structured and rational manner. Here are some key aspects of a logical and analytical mindset:

1. Logical Reasoning: Logical reasoning involves the ability to evaluate and draw conclusions based on facts, evidence, and logical connections. It involves identifying patterns, relationships, and cause-and-effect relationships between different elements.

2. Systematic Approach: A logical and analytical mindset involves breaking down complex problems into smaller, more manageable components. It entails organizing and structuring information, tasks, and processes in a systematic and coherent way.

3. Attention to Detail: Being detail-oriented is important in a logical and analytical mindset. It involves paying close attention to the specifics and nuances of a problem or situation, as well as the steps and processes involved in solving it.

4. Objective Thinking: An analytical mindset requires approaching problems objectively, setting aside personal biases and preconceived notions. It involves gathering relevant information, analyzing it objectively, and basing decisions on evidence rather than emotions or assumptions.

5. Problem Decomposition: A logical and analytical mindset involves breaking down complex problems into smaller, more manageable subproblems or components. This helps in understanding the problem space, identifying dependencies, and finding solutions for each subproblem.

6. Data-driven Approach: Analytical thinking involves relying on data and evidence to make informed decisions. It includes collecting and analyzing relevant data, drawing insights from it, and using those insights to inform problem-solving strategies.

7. Hypothesis Testing: An analytical mindset involves formulating hypotheses or potential solutions and systematically testing them. It entails designing experiments, gathering data, and evaluating the results to validate or reject the hypotheses.

8. Critical Thinking: Critical thinking is a fundamental aspect of an analytical mindset. It involves questioning assumptions, challenging existing ideas, and considering multiple perspectives to arrive at well-reasoned conclusions.

9. Problem Solving: An analytical mindset is closely associated with problem-solving skills. It involves identifying problems, analyzing the root causes, generating potential solutions, and evaluating the best course of action based on logical reasoning and evidence.

Developing a logical and analytical mindset is a continuous process that can be enhanced through practice, exposure to diverse problem-solving scenarios, and actively seeking feedback and learning from experiences.


///////////////////////////////////////////////////////////////////////// Which one is good solving problems in mind or solving problems on paper
Which one is good solving problems in mind or solving problems on paper

Both solving problems in mind and solving problems on paper have their own benefits and are often used in conjunction with each other. Here's a comparison of the two approaches:

Solving Problems in Mind:

Flexibility: Solving problems in your mind allows for more flexibility and agility. You can quickly iterate through different solutions, consider various possibilities, and mentally simulate the outcomes.

Efficiency: For simpler or well-known problems, solving them in your mind can be more efficient. It saves time by bypassing the process of writing everything down and allows you to arrive at a solution more rapidly.

Mental Visualization: Some problems can be better understood and visualized mentally. Solving them in your mind can help you grasp the problem's intricacies, relationships, and potential solutions more effectively.

Informal Approach: Solving problems in your mind is often an informal approach, suitable for quick brainstorming, ideation, and initial exploration of ideas. It can be a useful way to develop a high-level understanding of the problem before diving into detailed implementation.

Solving Problems on Paper:

Clarity and Organization: Writing down the problem, its requirements, and your thought process helps bring clarity to your thinking. It forces you to structure your ideas, identify gaps or missing information, and organize your solution approach systematically.

Documentation: Solving problems on paper provides a physical record of your thought process and solution strategy. This documentation can be valuable for future reference, collaboration, and communicating your ideas to others.

Visual Representation: Complex problems often benefit from visual representations such as diagrams, flowcharts, or sketches. Solving problems on paper allows you to draw these visual aids, making it easier to understand, analyze, and communicate your solution.

Debugging and Iteration: When solving problems on paper, it becomes easier to identify errors, logical flaws, or suboptimal solutions. You can trace through your written steps, identify mistakes, and iterate on your solution more effectively.

In practice, many programmers use a combination of both approaches. They might initially solve a problem in their mind to explore ideas and gain a high-level understanding. Then, they transfer their thoughts to paper or a digital document to solidify their solution, organize their thinking, and work through the details.

The choice between solving problems in mind or on paper depends on the complexity of the problem, personal preferences, and the specific requirements of the situation. It's often beneficial to adapt your approach based on the problem at hand and leverage the strengths of each method to arrive at the best possible solution.

//////////////////////////////////////////////////can you explain this line : They break down complex problems into smaller, manageable parts and think critically to devise solutions.
Certainly! Let's break down the line "They break down complex problems into smaller, manageable parts and think critically to devise solutions" into its key components:

Complex Problems: Complex problems refer to those that are difficult, intricate, or multifaceted in nature. These problems often involve multiple variables, dependencies, or layers of complexity that make them challenging to solve directly.

Breaking Down: Breaking down complex problems involves dividing them into smaller, more manageable parts or subproblems. This process simplifies the problem by isolating specific aspects or components, making it easier to understand and solve each part individually.

Smaller, Manageable Parts: By breaking down a complex problem, programmers create smaller, more digestible components. These parts are typically easier to comprehend, analyze, and address compared to the overall complexity of the problem. Each part can be tackled independently or in a step-by-step manner.

Thinking Critically: Thinking critically refers to the ability to objectively analyze, evaluate, and assess the problem and potential solutions. It involves questioning assumptions, considering alternative perspectives, and weighing the pros and cons of different approaches. Critical thinking helps programmers approach the problem from different angles and make well-informed decisions.

Devising Solutions: Once the complex problem is broken down into smaller parts and critical thinking is applied, programmers can focus on finding solutions for each individual part. This involves applying problem-solving techniques, algorithmic thinking, and domain-specific knowledge to devise effective strategies or algorithms to address each subproblem.

Overall, the process described in the line emphasizes the importance of breaking down complex problems, analyzing them critically, and developing solutions for each smaller part. By dividing the problem into manageable pieces and applying critical thinking, programmers can approach the problem-solving process in a more structured and systematic way, increasing the chances of finding effective solutions










Jan : try to use old patter and other experience(book) to unblock your potential.
jan : Live the life in 10 rule (success of ladder , Think and grow rich)
jan : Ronado and virat kohli ayesa body language mat rakho.
jan  : Elun musk and billgate Jaisa mindset rakho.
Jan : time hote hi samajdhar ban gawoo.
Feb : sabko baat ko samjho ,partu faisaa apna loo(manipal hospital)
Feb : Recall full day in details before going for sleep.
Feb :Jo bhi hum Kam karte usme nahi hum kush hote hai nahi dukhi hote hai balki focus hote hai  example : chess player , boxer
Feb : mudra is also important because different - different mudra have different values.
Feb : chinta mat Karo bhai chintan Karo.
Feb : If you are understanding something you can solve it.
Feb : bhai Jo tumko kya -kya chig karna hai.tumhare mind me dhumte rahna chahiye.
Feb : Tuesday ko kabhi banana lene gao to test Karo ki pakka hue hai ki nahi
Feb : Kabhi bhi pannic mat ho bhai.
Feb : daily Kam ka backup lo powerbi
Feb : do not try to make them understand try to listen senior (try to resolve your dout)
Feb : beginner   intermediate Advanced. (task completion).
Feb : if you are telling any one to do something , think about your plan.(Like I asked for srikant bro)
Feb : Bangalore me 60% log Hindi bolte hai.
Feb : parag Parikh flexi cap fund is best for sip.
Feb : yesterday ka issue fix Karo koi bhi meating me Jane se pahle.
Feb : 5 menutes prepared before meating.
Feb : three thing never forget today night recall, morning recall , meditation 
Feb :if you know something, or if you do not able to recall something, first learn or revision it for completing the task.
Feb : banana agar bahar mile to rate chech kar ke lele hai.
Feb : if 6AM me uthana hai to 10:30 go to bed .
Feb : Hamko Morning work ko lekar fix and plan rahana hoga taki subah ka time weste mat hoo 
Feb : data retrieval / data registration/ Problem Solveing.(Learning)
Jan : Do not think about the futher and past 
,but take learning from past , Have a goal for future, live in present, focused on present work. 
Be realistic and Practical 

Jan: Jo important hai usko revision karna Jaruri hai(Power bi developing application).
Jan : Important of sleep (elum musk told take sleep 6:30 hrs proper)
Feb : Agar task completed ho jata hai to take rest for 1 hrs 2 har 30 minutes.
Feb : Make it everything thing simple
Feb : Jo bhi Kam karna hai Kam kar ke complete Karo .
Feb : Till not got placed try go to bed 10:30 PM and Wake up at 6:00 AM
Jan : when I have Learning new things I should go slow.
Feb : Koi bhai traveling/tripe par ja rahe ho to Waha par raat ko thanda lagege ki nahi lagega  sweter lelena bhai.
Feb : kaha par No kahana hai ,Learn to say No Paisa Dena tirupati.
Feb : Data - information ko ache se revision Karo kyu ki mere kama data information par hi hai. Ubhi ache se detail me Karo.
Mar : Meating se Jo pahle karna hai sab kar lo bhai, Manager se bahut badiya relationship banaye rakho, never asked time in between meating.
Mar : apna pura plan kisi ko mat batao.(Like Saurav).
Mar ; Guruji ne bole the n daat me kuch fash Gate hai to usi ko nikal na hai(uisa nahi hona chahiye)
Mar : kabi bhi tumko meating me documents kole kar explain Karo to pahle pura document check kar loo.
Mar : Sara document ko online kar doo(DSA Copy)
Mar :Rahul koi chij agree hai ,or tumko fayda hai kid Jana chahiye
Mar : Koi bhi chig implement kar rahe hoo n to complete btaim me soch loo pahle bhai kaise karna hai kya output ayega , isse time save hoga.
MAR : Hamesh kush hoke Sona hai raat Mai ki Saab kuch sahi chal raha hai.
MAR : kabhi apna location batoo to ,shop - near by big thing -location
Mar : DSA par iese time do 5 to 10 minutes solution sochane me 10 minutes code  karne me nahi ata hai solution dekho bhai.
Mar : Kuch chijo ko chalana sikhana padega ki kai used hota hai(Abstraction Car) . Kuch chij Cooking ki tarah sikhana padega ki each and every thing from origin . Koi bhi skill ko divide kar doo in do chijo me , some time 3 thing me.
1) apne dimag ki batti jalake rakho Monging to night and when youare doing complex thing testing and developing you need to bring lot more data at upper level(everything you are valid falidate and organizing  ) .  fast still remember that feeling you need that kind of feeling.
2) Live ke Growth ke alag - alage level par pne mind se pucho apne mind se pucho kis vibration par tune karna hai

